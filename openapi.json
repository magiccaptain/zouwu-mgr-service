{
  "openapi": "3.0.0",
  "paths": {
    "/hello": {
      "get": {
        "operationId": "hello",
        "summary": "",
        "description": "health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paged array of vehicles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResult"
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "createUser",
        "summary": "",
        "description": "Create user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listUsers",
        "summary": "",
        "description": "List users",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createAt",
                "-createAt",
                "updateAt",
                "-updateAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nickname_like",
            "required": false,
            "in": "query",
            "description": "昵称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ns_start",
            "required": false,
            "in": "query",
            "description": "所属命名空间 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "邮箱",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "真实姓名",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "required": false,
            "in": "query",
            "description": "手机号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "required": false,
            "in": "query",
            "description": "用户所在地区，存地区编号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ns",
            "required": false,
            "in": "query",
            "description": "所属命名空间",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roles",
            "required": false,
            "in": "query",
            "description": "角色",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "summary": "",
        "description": "Find user by id",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "summary": "",
        "description": "Update user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "",
        "description": "Delete user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/namespaces": {
      "post": {
        "operationId": "createNamespace",
        "summary": "",
        "description": "Create namespace",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNamespaceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The namespace has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listNamespaces",
        "summary": "",
        "description": "List namespaces",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createAt",
                "-createAt",
                "updateAt",
                "-updateAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ns_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "required": false,
            "in": "query",
            "description": "标签",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of namespaces.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Namespace"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/namespaces/{namespaceIdOrNs}": {
      "get": {
        "operationId": "getNamespace",
        "summary": "",
        "description": "Find namespace by id or ns",
        "parameters": [
          {
            "name": "namespaceIdOrNs",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The namespace with expected id or ns.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/namespaces/{namespaceId}": {
      "patch": {
        "operationId": "updateNamespace",
        "summary": "",
        "description": "Update namespace",
        "parameters": [
          {
            "name": "namespaceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNamespaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The namespace updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteNamespace",
        "summary": "",
        "description": "Delete namespace",
        "parameters": [
          {
            "name": "namespaceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/sessions": {
      "post": {
        "operationId": "createSession",
        "summary": "",
        "description": "Create session",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The session has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listSessions",
        "summary": "",
        "description": "List sessions",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createAt",
                "-createAt",
                "updateAt",
                "-updateAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "description": "用 key 进行查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "required": false,
            "in": "query",
            "description": "根据 sub 查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "required": false,
            "in": "query",
            "description": "客户端",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "operationId": "getSession",
        "summary": "",
        "description": "Find session by id",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The session with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateSession",
        "summary": "",
        "description": "Update session",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteSession",
        "summary": "",
        "description": "Delete session",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/sessions/@login": {
      "post": {
        "operationId": "login",
        "summary": "",
        "description": "通过 username、email / password 登录",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "The session which is created by login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/sessions/@refresh": {
      "post": {
        "operationId": "refreshSession",
        "summary": "",
        "description": "根据 key 刷新 Session\n\nkey 是用户的授权令牌，token 是用户访问资源的凭证",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "The session has been successfully refreshed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/sessions/@restrictToken": {
      "post": {
        "operationId": "restictToken",
        "summary": "",
        "description": "返回一个 token\n\n一般用于给设备等提供临时访问凭证",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlyToken"
                }
              }
            }
          },
          "201": {
            "description": "The restricted token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlyToken"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/brokers": {
      "get": {
        "operationId": "listBrokers",
        "summary": "List all available brokers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of available brokers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListBrokerDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "broker"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hosting-server": {
      "post": {
        "operationId": "createHostingServer",
        "summary": "",
        "description": "create hosting server",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHostingServerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The hosting server has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingServer"
                }
              }
            }
          }
        },
        "tags": [
          "HostingServer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listHostingServers",
        "summary": "",
        "description": "List hosting servers",
        "parameters": [
          {
            "name": "broker",
            "required": false,
            "in": "query",
            "description": "所属券商",
            "schema": {
              "$ref": "#/components/schemas/BROKER"
            }
          },
          {
            "name": "market",
            "required": false,
            "in": "query",
            "description": "所属市场",
            "schema": {
              "$ref": "#/components/schemas/MARKET"
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createAt",
                "-createAt",
                "updateAt",
                "-updateAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "名称",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The hosting servers have been successfully listed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HostingServer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "HostingServer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hosting-server/{hostingServerId}": {
      "get": {
        "operationId": "getHostingServer",
        "summary": "",
        "description": "Get hosting server by id",
        "parameters": [
          {
            "name": "hostingServerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The hosting server has been successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingServer"
                }
              }
            }
          }
        },
        "tags": [
          "HostingServer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateHostingServer",
        "summary": "",
        "description": "update hosting server by id",
        "parameters": [
          {
            "name": "hostingServerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHostingServerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The hosting server has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingServer"
                }
              }
            }
          }
        },
        "tags": [
          "HostingServer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteHostingServer",
        "summary": "",
        "description": "delete hosting server by id",
        "parameters": [
          {
            "name": "hostingServerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The hosting server has been successfully deleted."
          }
        },
        "tags": [
          "HostingServer"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/fund-account": {
      "post": {
        "operationId": "createFundAccount",
        "summary": "Create a fund account",
        "description": "create fund account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFundAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fund account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundAccount"
                }
              }
            }
          }
        },
        "tags": [
          "FundAccount"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listFundAccounts",
        "summary": "List fund accounts",
        "description": "List fund accounts",
        "parameters": [
          {
            "name": "fund_account",
            "required": false,
            "in": "query",
            "description": "资金账号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FUND_ACCOUNT_STATUS"
            }
          },
          {
            "name": "broker",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BROKER"
            }
          },
          {
            "name": "product",
            "required": false,
            "in": "query",
            "description": "产品名称",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createAt",
                "-createAt",
                "updateAt",
                "-updateAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fund accounts listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FundAccount"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "FundAccount"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/fund-account/{fundAccountId}": {
      "get": {
        "operationId": "getFundAccountById",
        "summary": "Get fund account by id",
        "description": "Get fund account by id",
        "parameters": [
          {
            "name": "fundAccountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fund account found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundAccount"
                }
              }
            }
          }
        },
        "tags": [
          "FundAccount"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateFundAccountById",
        "summary": "Update fund account by id",
        "description": "Update fund account by id",
        "parameters": [
          {
            "name": "fundAccountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFundAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fund account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundAccount"
                }
              }
            }
          }
        },
        "tags": [
          "FundAccount"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteFundAccountById",
        "summary": "Delete fund account by id",
        "description": "delete fund account by id",
        "parameters": [
          {
            "name": "fundAccountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fund account deleted successfully"
          }
        },
        "tags": [
          "FundAccount"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "ZouWu API Server",
    "description": "ZouWu API for swap-charge services",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "health",
      "description": ""
    },
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "pal",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "HealthCheckResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码",
            "writeOnly": true
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "district": {
            "type": "string",
            "description": "用户所在地区，存地区编号"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "name": {
            "type": "string",
            "description": "真实姓名"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          }
        },
        "required": [
          "ns"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码",
            "writeOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "district": {
            "type": "string",
            "description": "用户所在地区，存地区编号"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "lastSeeAt": {
            "format": "date-time",
            "type": "string",
            "description": "最后活跃时间"
          },
          "lastLoginIp": {
            "type": "string",
            "description": "最后登录 IP"
          },
          "name": {
            "type": "string",
            "description": "真实姓名"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "registerIp": {
            "type": "string",
            "description": "注册 IP"
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "ns",
          "roles",
          "id"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码",
            "writeOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "district": {
            "type": "string",
            "description": "用户所在地区，存地区编号"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "name": {
            "type": "string",
            "description": "真实姓名"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateNamespaceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间\n\nns 允许 . 分割，表示命名空间的层级关系\n\n字母开头，允许的字符集 [a-zA-Z0-9-_.]"
          },
          "parent": {
            "type": "string",
            "description": "父级命名空间"
          }
        },
        "required": [
          "name",
          "ns"
        ]
      },
      "Namespace": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间\n\nns 允许 . 分割，表示命名空间的层级关系\n\n字母开头，允许的字符集 [a-zA-Z0-9-_.]"
          },
          "parent": {
            "type": "string",
            "description": "父级命名空间"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "name",
          "ns",
          "id"
        ]
      },
      "UpdateNamespaceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          }
        }
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "subject": {
            "type": "string",
            "description": "用户"
          },
          "client": {
            "type": "string",
            "description": "客户端"
          }
        },
        "required": [
          "expireAt",
          "subject"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "key": {
            "type": "string",
            "description": "refresh token key"
          },
          "subject": {
            "type": "string",
            "description": "用户"
          },
          "client": {
            "type": "string",
            "description": "客户端"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "expireAt",
          "key",
          "subject",
          "id"
        ]
      },
      "UpdateSessionDto": {
        "type": "object",
        "properties": {
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "subject": {
            "type": "string",
            "description": "用户"
          },
          "client": {
            "type": "string",
            "description": "客户端"
          }
        }
      },
      "LoginSessionDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "用户名 或者 Email"
          },
          "password": {
            "type": "string",
            "description": "密码"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "SessionWithToken": {
        "type": "object",
        "properties": {
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "key": {
            "type": "string",
            "description": "refresh token key"
          },
          "subject": {
            "type": "string",
            "description": "用户"
          },
          "client": {
            "type": "string",
            "description": "客户端"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          },
          "token": {
            "type": "string",
            "description": "token"
          },
          "tokenExpireAt": {
            "format": "date-time",
            "type": "string",
            "description": "token 过期时间"
          }
        },
        "required": [
          "expireAt",
          "key",
          "subject",
          "id",
          "token",
          "tokenExpireAt"
        ]
      },
      "RefreshSessionDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          }
        },
        "required": [
          "key"
        ]
      },
      "RestrictTokenDto": {
        "type": "object",
        "properties": {
          "expiresIn": {
            "type": "string",
            "description": "short time span string\n\nrefs: https://github.com/vercel/ms\n\neg: \"2 days\", \"10h\", \"7d\", \"120s\", \"2.5 hrs\", \"2h\", \"1m\", \"5s\", \"1y\", \"100\", \"1y1m1d\"\n\nm => minute\nh => hour\nd => day\nw => week\nM => month\ny => year\ns => second\nms => millisecond\n无单位 => millisecond"
          }
        },
        "required": [
          "expiresIn"
        ]
      },
      "OnlyToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token"
          },
          "tokenExpireAt": {
            "format": "date-time",
            "type": "string",
            "description": "token 过期时间"
          }
        },
        "required": [
          "token",
          "tokenExpireAt"
        ]
      },
      "ListBrokerDto": {
        "type": "object",
        "properties": {
          "broker": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "broker",
          "name"
        ]
      },
      "BROKER": {
        "type": "string",
        "enum": [
          "guojun",
          "guoxin",
          "zhongjin",
          "zhongjin_eq",
          "zhaoshang",
          "fangzheng",
          "xtp"
        ]
      },
      "MARKET": {
        "type": "string",
        "enum": [
          "SH",
          "SZ"
        ]
      },
      "CreateHostingServerDto": {
        "type": "object",
        "properties": {
          "broker": {
            "description": "所属券商",
            "$ref": "#/components/schemas/BROKER"
          },
          "market": {
            "description": "所属市场",
            "$ref": "#/components/schemas/MARKET"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "host_ip": {
            "type": "string",
            "description": "在托管机房的主机ip"
          },
          "ssh_host": {
            "type": "string",
            "description": "ssh 登录host"
          },
          "ssh_user": {
            "type": "string",
            "description": "ssh 登录用户名"
          },
          "ssh_port": {
            "type": "number",
            "description": "ssh 登录端口"
          },
          "home_dir": {
            "type": "string",
            "description": "home路径"
          }
        },
        "required": [
          "name"
        ]
      },
      "HostingServer": {
        "type": "object",
        "properties": {
          "broker": {
            "description": "所属券商",
            "$ref": "#/components/schemas/BROKER"
          },
          "market": {
            "description": "所属市场",
            "$ref": "#/components/schemas/MARKET"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "host_ip": {
            "type": "string",
            "description": "在托管机房的主机ip"
          },
          "ssh_host": {
            "type": "string",
            "description": "ssh 登录host"
          },
          "ssh_user": {
            "type": "string",
            "description": "ssh 登录用户名"
          },
          "ssh_port": {
            "type": "number",
            "description": "ssh 登录端口"
          },
          "home_dir": {
            "type": "string",
            "description": "home路径"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "UpdateHostingServerDto": {
        "type": "object",
        "properties": {
          "broker": {
            "description": "所属券商",
            "$ref": "#/components/schemas/BROKER"
          },
          "market": {
            "description": "所属市场",
            "$ref": "#/components/schemas/MARKET"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "host_ip": {
            "type": "string",
            "description": "在托管机房的主机ip"
          },
          "ssh_host": {
            "type": "string",
            "description": "ssh 登录host"
          },
          "ssh_user": {
            "type": "string",
            "description": "ssh 登录用户名"
          },
          "ssh_port": {
            "type": "number",
            "description": "ssh 登录端口"
          },
          "home_dir": {
            "type": "string",
            "description": "home路径"
          }
        }
      },
      "FUND_ACCOUNT_STATUS": {
        "type": "string",
        "enum": [
          "TRADING",
          "CLOSED"
        ]
      },
      "CreateFundAccountDto": {
        "type": "object",
        "properties": {
          "fund_account": {
            "type": "string",
            "description": "资金账号"
          },
          "status": {
            "$ref": "#/components/schemas/FUND_ACCOUNT_STATUS"
          },
          "broker": {
            "$ref": "#/components/schemas/BROKER"
          },
          "product": {
            "type": "string",
            "description": "产品名称"
          }
        },
        "required": [
          "fund_account",
          "status",
          "broker"
        ]
      },
      "FundAccount": {
        "type": "object",
        "properties": {
          "fund_account": {
            "type": "string",
            "description": "资金账号"
          },
          "status": {
            "$ref": "#/components/schemas/FUND_ACCOUNT_STATUS"
          },
          "broker": {
            "$ref": "#/components/schemas/BROKER"
          },
          "product": {
            "type": "string",
            "description": "产品名称"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updateAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updateBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "fund_account",
          "status",
          "broker",
          "id"
        ]
      },
      "UpdateFundAccountDto": {
        "type": "object",
        "properties": {
          "fund_account": {
            "type": "string",
            "description": "资金账号"
          },
          "status": {
            "$ref": "#/components/schemas/FUND_ACCOUNT_STATUS"
          },
          "broker": {
            "$ref": "#/components/schemas/BROKER"
          },
          "product": {
            "type": "string",
            "description": "产品名称"
          }
        }
      }
    }
  }
}